<%-- 
Name:
Author: 
Description: 
--%>
<%--
常用标签：
<%= Utility.UpCaseFirst(name)%>
<%= name%>
<%= chinese[i]%>
<%= attribute[i]%>
<%= title%>
--%>
<%@ CodeTemplate Language="C#" ResponseEncoding="UTF-8" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%@ Assembly Src="Internal\Utility.cs" %>
<%string name = Utility.GetVo_name();
%>
package com.tbb.basedata.dao.sqlmap;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import com.dm.wmf.core.BaseSqlMapDao;
import com.dm.wmf.core.PageList;
import com.ibatis.dao.client.DaoException;
import com.ibatis.dao.client.DaoManager;
import com.tbb.basedata.dao.<%= Utility.UpCaseFirst(name)%>Dao;
import com.tbb.basedata.domain.<%= Utility.UpCaseFirst(name)%>;

/**
 * <%= Utility.UpCaseFirst(name)%> SqlMapDao
 */
public class <%= Utility.UpCaseFirst(name)%>SqlMapDao extends BaseSqlMapDao implements <%= Utility.UpCaseFirst(name)%>Dao {

	public <%= Utility.UpCaseFirst(name)%>SqlMapDao(DaoManager daoManager) {
		super(daoManager);
	}

	public void create(<%= Utility.UpCaseFirst(name)%> domain) throws DaoException {
		try {
			getSqlMapExecutor().insert("<%= Utility.UpCaseFirst(name)%>.create", domain);
		} catch (SQLException e) {
			throw new DaoException("Create domain error. cause:" + e, e);
		}
	}

	public int delete(java.lang.String domainPK) throws DaoException {
		try {
			return getSqlMapExecutor().delete("<%= Utility.UpCaseFirst(name)%>.delete", domainPK);
		} catch (SQLException e) {
			throw new DaoException("Delete domain error. cause:" + e, e);
		}
	}

	public List queryForList(Map params) throws DaoException {
		this.prepareQuery(params);
		List list = new ArrayList();
		try {
			list = getSqlMapExecutor().queryForList("<%= Utility.UpCaseFirst(name)%>.query_list", params);
		} catch (Exception e) {
			throw new DaoException("Query domain error" + e, e);
		}
		return list;
	}

	public PageList queryForPageList(Map params, int pageIndex, int pageSize)
			throws DaoException {
		this.prepareQuery(params);
		PageList list = null;
		try {
			list = queryForPageList("<%= Utility.UpCaseFirst(name)%>.query", params, pageIndex, pageSize);
		} catch (Exception e) {
			throw new DaoException("Query domain error. cause:", e);
		}
		return list;
	}

	public <%= Utility.UpCaseFirst(name)%> retrieve(java.lang.String domainPK) throws DaoException {
		<%= Utility.UpCaseFirst(name)%> object = new <%= Utility.UpCaseFirst(name)%>();
		try {
			object = (<%= Utility.UpCaseFirst(name)%>) getSqlMapExecutor().queryForObject(
					"<%= Utility.UpCaseFirst(name)%>.retrieve", domainPK);
		} catch (SQLException e) {
			throw new DaoException("Retrieve domain error. cause:" + e, e);
		}
		return object;
	}

	public int update(<%= Utility.UpCaseFirst(name)%> domain) throws DaoException {
		try {
			return getSqlMapExecutor().update("<%= Utility.UpCaseFirst(name)%>.update", domain);
		} catch (SQLException e) {
			throw new DaoException("Update domain error. cause:" + e, e);
		}
	}


}

<script runat="template">
</script>